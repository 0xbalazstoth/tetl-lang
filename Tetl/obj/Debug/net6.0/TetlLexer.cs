//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\rpgix\RiderProjects\Tetl\Tetl\Content\Tetl.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tetl.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TetlLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, BOOL_OPERATOR=23, INTEGER=24, 
		FLOAT=25, STRING=26, BOOL=27, NULL=28, FOR=29, IN=30, FOREACH=31, DO=32, 
		WHILE=33, IF=34, ELSE=35, COMMENT=36, LINE_COMMENT=37, LINE_BREAK=38, 
		WS=39, IDENTIFIER=40;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "BOOL_OPERATOR", "INTEGER", 
		"FLOAT", "STRING", "BOOL", "NULL", "FOR", "IN", "FOREACH", "DO", "WHILE", 
		"IF", "ELSE", "COMMENT", "LINE_COMMENT", "LINE_BREAK", "WS", "IDENTIFIER"
	};


	public TetlLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'('", "')'", "'{'", "'}'", "'='", "','", "'['", "']'", "'.At'", 
		"'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'>'", "'<'", 
		"'>='", "'<='", null, null, null, null, null, "'null'", "'for'", "'in'", 
		"'foreach'", "'do'", null, "'if'", "'else'", null, null, "'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "BOOL_OPERATOR", 
		"INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "FOR", "IN", "FOREACH", 
		"DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", "LINE_BREAK", 
		"WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tetl.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2*\x111\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b"+
		"\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE"+
		"\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3"+
		"\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3"+
		"\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x3\x18\x5\x18\x8F\n\x18\x3\x19\x6\x19\x92\n\x19\r\x19\xE\x19\x93"+
		"\x3\x1A\x6\x1A\x97\n\x1A\r\x1A\xE\x1A\x98\x3\x1A\x3\x1A\x6\x1A\x9D\n\x1A"+
		"\r\x1A\xE\x1A\x9E\x3\x1B\x3\x1B\a\x1B\xA3\n\x1B\f\x1B\xE\x1B\xA6\v\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\a\x1B\xAB\n\x1B\f\x1B\xE\x1B\xAE\v\x1B\x3\x1B\x5"+
		"\x1B\xB1\n\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1C\x5\x1C\xBC\n\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3"+
		"\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3"+
		" \x3!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\xDF"+
		"\n\"\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3%\x3%\x3%\x3%\a%\xED\n%\f%\xE%"+
		"\xF0\v%\x3%\x3%\x3%\x3%\x3%\x3&\x3&\x3&\x3&\a&\xFB\n&\f&\xE&\xFE\v&\x3"+
		"&\x3&\x3\'\x3\'\x3(\x6(\x105\n(\r(\xE(\x106\x3(\x3(\x3)\x3)\a)\x10D\n"+
		")\f)\xE)\x110\v)\x3\xEE\x2\x2*\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2"+
		"\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2"+
		"\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2"+
		"\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2"+
		"\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O"+
		"\x2)Q\x2*\x3\x2\t\x3\x2\x32;\x3\x2$$\x3\x2))\x4\x2\f\f\xF\xF\x5\x2\v\f"+
		"\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x11F"+
		"\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2"+
		"\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2"+
		"\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2"+
		"\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2"+
		"\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2"+
		"\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2"+
		"\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2"+
		"\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x3"+
		"S\x3\x2\x2\x2\x5U\x3\x2\x2\x2\aW\x3\x2\x2\x2\tY\x3\x2\x2\x2\v[\x3\x2\x2"+
		"\x2\r]\x3\x2\x2\x2\xF_\x3\x2\x2\x2\x11\x61\x3\x2\x2\x2\x13\x63\x3\x2\x2"+
		"\x2\x15\x65\x3\x2\x2\x2\x17i\x3\x2\x2\x2\x19k\x3\x2\x2\x2\x1Bm\x3\x2\x2"+
		"\x2\x1Do\x3\x2\x2\x2\x1Fq\x3\x2\x2\x2!s\x3\x2\x2\x2#u\x3\x2\x2\x2%x\x3"+
		"\x2\x2\x2\'{\x3\x2\x2\x2)}\x3\x2\x2\x2+\x7F\x3\x2\x2\x2-\x82\x3\x2\x2"+
		"\x2/\x8E\x3\x2\x2\x2\x31\x91\x3\x2\x2\x2\x33\x96\x3\x2\x2\x2\x35\xB0\x3"+
		"\x2\x2\x2\x37\xBB\x3\x2\x2\x2\x39\xBD\x3\x2\x2\x2;\xC2\x3\x2\x2\x2=\xC6"+
		"\x3\x2\x2\x2?\xC9\x3\x2\x2\x2\x41\xD1\x3\x2\x2\x2\x43\xDE\x3\x2\x2\x2"+
		"\x45\xE0\x3\x2\x2\x2G\xE3\x3\x2\x2\x2I\xE8\x3\x2\x2\x2K\xF6\x3\x2\x2\x2"+
		"M\x101\x3\x2\x2\x2O\x104\x3\x2\x2\x2Q\x10A\x3\x2\x2\x2ST\a=\x2\x2T\x4"+
		"\x3\x2\x2\x2UV\a*\x2\x2V\x6\x3\x2\x2\x2WX\a+\x2\x2X\b\x3\x2\x2\x2YZ\a"+
		"}\x2\x2Z\n\x3\x2\x2\x2[\\\a\x7F\x2\x2\\\f\x3\x2\x2\x2]^\a?\x2\x2^\xE\x3"+
		"\x2\x2\x2_`\a.\x2\x2`\x10\x3\x2\x2\x2\x61\x62\a]\x2\x2\x62\x12\x3\x2\x2"+
		"\x2\x63\x64\a_\x2\x2\x64\x14\x3\x2\x2\x2\x65\x66\a\x30\x2\x2\x66g\a\x43"+
		"\x2\x2gh\av\x2\x2h\x16\x3\x2\x2\x2ij\a#\x2\x2j\x18\x3\x2\x2\x2kl\a,\x2"+
		"\x2l\x1A\x3\x2\x2\x2mn\a\x31\x2\x2n\x1C\x3\x2\x2\x2op\a\'\x2\x2p\x1E\x3"+
		"\x2\x2\x2qr\a-\x2\x2r \x3\x2\x2\x2st\a/\x2\x2t\"\x3\x2\x2\x2uv\a?\x2\x2"+
		"vw\a?\x2\x2w$\x3\x2\x2\x2xy\a#\x2\x2yz\a?\x2\x2z&\x3\x2\x2\x2{|\a@\x2"+
		"\x2|(\x3\x2\x2\x2}~\a>\x2\x2~*\x3\x2\x2\x2\x7F\x80\a@\x2\x2\x80\x81\a"+
		"?\x2\x2\x81,\x3\x2\x2\x2\x82\x83\a>\x2\x2\x83\x84\a?\x2\x2\x84.\x3\x2"+
		"\x2\x2\x85\x86\a(\x2\x2\x86\x8F\a(\x2\x2\x87\x88\a\x63\x2\x2\x88\x89\a"+
		"p\x2\x2\x89\x8F\a\x66\x2\x2\x8A\x8B\a~\x2\x2\x8B\x8F\a~\x2\x2\x8C\x8D"+
		"\aq\x2\x2\x8D\x8F\at\x2\x2\x8E\x85\x3\x2\x2\x2\x8E\x87\x3\x2\x2\x2\x8E"+
		"\x8A\x3\x2\x2\x2\x8E\x8C\x3\x2\x2\x2\x8F\x30\x3\x2\x2\x2\x90\x92\t\x2"+
		"\x2\x2\x91\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x93\x91\x3\x2\x2\x2\x93"+
		"\x94\x3\x2\x2\x2\x94\x32\x3\x2\x2\x2\x95\x97\t\x2\x2\x2\x96\x95\x3\x2"+
		"\x2\x2\x97\x98\x3\x2\x2\x2\x98\x96\x3\x2\x2\x2\x98\x99\x3\x2\x2\x2\x99"+
		"\x9A\x3\x2\x2\x2\x9A\x9C\a\x30\x2\x2\x9B\x9D\t\x2\x2\x2\x9C\x9B\x3\x2"+
		"\x2\x2\x9D\x9E\x3\x2\x2\x2\x9E\x9C\x3\x2\x2\x2\x9E\x9F\x3\x2\x2\x2\x9F"+
		"\x34\x3\x2\x2\x2\xA0\xA4\a$\x2\x2\xA1\xA3\n\x3\x2\x2\xA2\xA1\x3\x2\x2"+
		"\x2\xA3\xA6\x3\x2\x2\x2\xA4\xA2\x3\x2\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5\xA7"+
		"\x3\x2\x2\x2\xA6\xA4\x3\x2\x2\x2\xA7\xB1\a$\x2\x2\xA8\xAC\a)\x2\x2\xA9"+
		"\xAB\n\x4\x2\x2\xAA\xA9\x3\x2\x2\x2\xAB\xAE\x3\x2\x2\x2\xAC\xAA\x3\x2"+
		"\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAF\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAF"+
		"\xB1\a)\x2\x2\xB0\xA0\x3\x2\x2\x2\xB0\xA8\x3\x2\x2\x2\xB1\x36\x3\x2\x2"+
		"\x2\xB2\xB3\av\x2\x2\xB3\xB4\at\x2\x2\xB4\xB5\aw\x2\x2\xB5\xBC\ag\x2\x2"+
		"\xB6\xB7\ah\x2\x2\xB7\xB8\a\x63\x2\x2\xB8\xB9\an\x2\x2\xB9\xBA\au\x2\x2"+
		"\xBA\xBC\ag\x2\x2\xBB\xB2\x3\x2\x2\x2\xBB\xB6\x3\x2\x2\x2\xBC\x38\x3\x2"+
		"\x2\x2\xBD\xBE\ap\x2\x2\xBE\xBF\aw\x2\x2\xBF\xC0\an\x2\x2\xC0\xC1\an\x2"+
		"\x2\xC1:\x3\x2\x2\x2\xC2\xC3\ah\x2\x2\xC3\xC4\aq\x2\x2\xC4\xC5\at\x2\x2"+
		"\xC5<\x3\x2\x2\x2\xC6\xC7\ak\x2\x2\xC7\xC8\ap\x2\x2\xC8>\x3\x2\x2\x2\xC9"+
		"\xCA\ah\x2\x2\xCA\xCB\aq\x2\x2\xCB\xCC\at\x2\x2\xCC\xCD\ag\x2\x2\xCD\xCE"+
		"\a\x63\x2\x2\xCE\xCF\a\x65\x2\x2\xCF\xD0\aj\x2\x2\xD0@\x3\x2\x2\x2\xD1"+
		"\xD2\a\x66\x2\x2\xD2\xD3\aq\x2\x2\xD3\x42\x3\x2\x2\x2\xD4\xD5\ay\x2\x2"+
		"\xD5\xD6\aj\x2\x2\xD6\xD7\ak\x2\x2\xD7\xD8\an\x2\x2\xD8\xDF\ag\x2\x2\xD9"+
		"\xDA\aw\x2\x2\xDA\xDB\ap\x2\x2\xDB\xDC\av\x2\x2\xDC\xDD\ak\x2\x2\xDD\xDF"+
		"\an\x2\x2\xDE\xD4\x3\x2\x2\x2\xDE\xD9\x3\x2\x2\x2\xDF\x44\x3\x2\x2\x2"+
		"\xE0\xE1\ak\x2\x2\xE1\xE2\ah\x2\x2\xE2\x46\x3\x2\x2\x2\xE3\xE4\ag\x2\x2"+
		"\xE4\xE5\an\x2\x2\xE5\xE6\au\x2\x2\xE6\xE7\ag\x2\x2\xE7H\x3\x2\x2\x2\xE8"+
		"\xE9\a@\x2\x2\xE9\xEA\a,\x2\x2\xEA\xEE\x3\x2\x2\x2\xEB\xED\v\x2\x2\x2"+
		"\xEC\xEB\x3\x2\x2\x2\xED\xF0\x3\x2\x2\x2\xEE\xEF\x3\x2\x2\x2\xEE\xEC\x3"+
		"\x2\x2\x2\xEF\xF1\x3\x2\x2\x2\xF0\xEE\x3\x2\x2\x2\xF1\xF2\a,\x2\x2\xF2"+
		"\xF3\a>\x2\x2\xF3\xF4\x3\x2\x2\x2\xF4\xF5\b%\x2\x2\xF5J\x3\x2\x2\x2\xF6"+
		"\xF7\a@\x2\x2\xF7\xF8\a@\x2\x2\xF8\xFC\x3\x2\x2\x2\xF9\xFB\n\x5\x2\x2"+
		"\xFA\xF9\x3\x2\x2\x2\xFB\xFE\x3\x2\x2\x2\xFC\xFA\x3\x2\x2\x2\xFC\xFD\x3"+
		"\x2\x2\x2\xFD\xFF\x3\x2\x2\x2\xFE\xFC\x3\x2\x2\x2\xFF\x100\b&\x2\x2\x100"+
		"L\x3\x2\x2\x2\x101\x102\a\f\x2\x2\x102N\x3\x2\x2\x2\x103\x105\t\x6\x2"+
		"\x2\x104\x103\x3\x2\x2\x2\x105\x106\x3\x2\x2\x2\x106\x104\x3\x2\x2\x2"+
		"\x106\x107\x3\x2\x2\x2\x107\x108\x3\x2\x2\x2\x108\x109\b(\x2\x2\x109P"+
		"\x3\x2\x2\x2\x10A\x10E\t\a\x2\x2\x10B\x10D\t\b\x2\x2\x10C\x10B\x3\x2\x2"+
		"\x2\x10D\x110\x3\x2\x2\x2\x10E\x10C\x3\x2\x2\x2\x10E\x10F\x3\x2\x2\x2"+
		"\x10FR\x3\x2\x2\x2\x110\x10E\x3\x2\x2\x2\x10\x2\x8E\x93\x98\x9E\xA4\xAC"+
		"\xB0\xBB\xDE\xEE\xFC\x106\x10E\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tetl.Content
