//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\rpgix\RiderProjects\Tetl\Tetl\Content\Tetl.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tetl.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TetlLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, BOOL_OPERATOR=24, 
		LENGTH=25, INTEGER=26, FLOAT=27, STRING=28, CHAR=29, BOOL=30, NULL=31, 
		BYTE=32, FOR=33, IN=34, FOREACH=35, DO=36, WHILE=37, IF=38, ELSE=39, COMMENT=40, 
		LINE_COMMENT=41, LINE_BREAK=42, WS=43, IDENTIFIER=44;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "BOOL_OPERATOR", 
		"LENGTH", "INTEGER", "FLOAT", "STRING", "CHAR", "BOOL", "NULL", "BYTE", 
		"FOR", "IN", "FOREACH", "DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", 
		"LINE_BREAK", "WS", "IDENTIFIER"
	};


	public TetlLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'('", "')'", "'{'", "'}'", "'='", "','", "'['", "']'", "'.At'", 
		"'.'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'>'", 
		"'<'", "'>='", "'<='", null, "'.Length()'", null, null, null, null, null, 
		"'null'", null, "'for'", "'in'", "'foreach'", "'do'", null, "'if'", "'else'", 
		null, null, "'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"BOOL_OPERATOR", "LENGTH", "INTEGER", "FLOAT", "STRING", "CHAR", "BOOL", 
		"NULL", "BYTE", "FOR", "IN", "FOREACH", "DO", "WHILE", "IF", "ELSE", "COMMENT", 
		"LINE_COMMENT", "LINE_BREAK", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tetl.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2.\x13B\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5"+
		"\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3"+
		"\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3"+
		"\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3"+
		"\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3"+
		"\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x5\x19\x99\n\x19"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1B\x5\x1B\xA6\n\x1B\x3\x1B\x6\x1B\xA9\n\x1B\r\x1B\xE\x1B\xAA\x3\x1C"+
		"\x5\x1C\xAE\n\x1C\x3\x1C\x6\x1C\xB1\n\x1C\r\x1C\xE\x1C\xB2\x3\x1C\x3\x1C"+
		"\x6\x1C\xB7\n\x1C\r\x1C\xE\x1C\xB8\x3\x1D\x3\x1D\a\x1D\xBD\n\x1D\f\x1D"+
		"\xE\x1D\xC0\v\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\a\x1E\xC6\n\x1E\f\x1E\xE"+
		"\x1E\xC9\v\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3\x1F\x5\x1F\xD6\n\x1F\x3 \x3 \x3 \x3 \x3 \x3!\x5!\xDE"+
		"\n!\x3!\x5!\xE1\n!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xEB\n!\x3\"\x3"+
		"\"\x3\"\x3\"\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3%\x3%\x3%\x3"+
		"&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x5&\x109\n&\x3\'\x3\'\x3\'\x3(\x3"+
		"(\x3(\x3(\x3(\x3)\x3)\x3)\x3)\a)\x117\n)\f)\xE)\x11A\v)\x3)\x3)\x3)\x3"+
		")\x3)\x3*\x3*\x3*\x3*\a*\x125\n*\f*\xE*\x128\v*\x3*\x3*\x3+\x3+\x3,\x6"+
		",\x12F\n,\r,\xE,\x130\x3,\x3,\x3-\x3-\a-\x137\n-\f-\xE-\x13A\v-\x3\x118"+
		"\x2\x2.\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2"+
		"\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!"+
		"\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2"+
		"-Y\x2.\x3\x2\f\x3\x2\x32;\x3\x2$$\x3\x2))\x3\x2\x32\x33\x3\x2\x32\x36"+
		"\x3\x2\x32\x37\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61"+
		"\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x14E\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2"+
		"=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2"+
		"\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3"+
		"\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2"+
		"\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x3[\x3\x2\x2\x2\x5]\x3\x2\x2\x2\a"+
		"_\x3\x2\x2\x2\t\x61\x3\x2\x2\x2\v\x63\x3\x2\x2\x2\r\x65\x3\x2\x2\x2\xF"+
		"g\x3\x2\x2\x2\x11i\x3\x2\x2\x2\x13k\x3\x2\x2\x2\x15m\x3\x2\x2\x2\x17q"+
		"\x3\x2\x2\x2\x19s\x3\x2\x2\x2\x1Bu\x3\x2\x2\x2\x1Dw\x3\x2\x2\x2\x1Fy\x3"+
		"\x2\x2\x2!{\x3\x2\x2\x2#}\x3\x2\x2\x2%\x7F\x3\x2\x2\x2\'\x82\x3\x2\x2"+
		"\x2)\x85\x3\x2\x2\x2+\x87\x3\x2\x2\x2-\x89\x3\x2\x2\x2/\x8C\x3\x2\x2\x2"+
		"\x31\x98\x3\x2\x2\x2\x33\x9A\x3\x2\x2\x2\x35\xA5\x3\x2\x2\x2\x37\xAD\x3"+
		"\x2\x2\x2\x39\xBA\x3\x2\x2\x2;\xC3\x3\x2\x2\x2=\xD5\x3\x2\x2\x2?\xD7\x3"+
		"\x2\x2\x2\x41\xEA\x3\x2\x2\x2\x43\xEC\x3\x2\x2\x2\x45\xF0\x3\x2\x2\x2"+
		"G\xF3\x3\x2\x2\x2I\xFB\x3\x2\x2\x2K\x108\x3\x2\x2\x2M\x10A\x3\x2\x2\x2"+
		"O\x10D\x3\x2\x2\x2Q\x112\x3\x2\x2\x2S\x120\x3\x2\x2\x2U\x12B\x3\x2\x2"+
		"\x2W\x12E\x3\x2\x2\x2Y\x134\x3\x2\x2\x2[\\\a=\x2\x2\\\x4\x3\x2\x2\x2]"+
		"^\a*\x2\x2^\x6\x3\x2\x2\x2_`\a+\x2\x2`\b\x3\x2\x2\x2\x61\x62\a}\x2\x2"+
		"\x62\n\x3\x2\x2\x2\x63\x64\a\x7F\x2\x2\x64\f\x3\x2\x2\x2\x65\x66\a?\x2"+
		"\x2\x66\xE\x3\x2\x2\x2gh\a.\x2\x2h\x10\x3\x2\x2\x2ij\a]\x2\x2j\x12\x3"+
		"\x2\x2\x2kl\a_\x2\x2l\x14\x3\x2\x2\x2mn\a\x30\x2\x2no\a\x43\x2\x2op\a"+
		"v\x2\x2p\x16\x3\x2\x2\x2qr\a\x30\x2\x2r\x18\x3\x2\x2\x2st\a#\x2\x2t\x1A"+
		"\x3\x2\x2\x2uv\a,\x2\x2v\x1C\x3\x2\x2\x2wx\a\x31\x2\x2x\x1E\x3\x2\x2\x2"+
		"yz\a\'\x2\x2z \x3\x2\x2\x2{|\a-\x2\x2|\"\x3\x2\x2\x2}~\a/\x2\x2~$\x3\x2"+
		"\x2\x2\x7F\x80\a?\x2\x2\x80\x81\a?\x2\x2\x81&\x3\x2\x2\x2\x82\x83\a#\x2"+
		"\x2\x83\x84\a?\x2\x2\x84(\x3\x2\x2\x2\x85\x86\a@\x2\x2\x86*\x3\x2\x2\x2"+
		"\x87\x88\a>\x2\x2\x88,\x3\x2\x2\x2\x89\x8A\a@\x2\x2\x8A\x8B\a?\x2\x2\x8B"+
		".\x3\x2\x2\x2\x8C\x8D\a>\x2\x2\x8D\x8E\a?\x2\x2\x8E\x30\x3\x2\x2\x2\x8F"+
		"\x90\a(\x2\x2\x90\x99\a(\x2\x2\x91\x92\a\x63\x2\x2\x92\x93\ap\x2\x2\x93"+
		"\x99\a\x66\x2\x2\x94\x95\a~\x2\x2\x95\x99\a~\x2\x2\x96\x97\aq\x2\x2\x97"+
		"\x99\at\x2\x2\x98\x8F\x3\x2\x2\x2\x98\x91\x3\x2\x2\x2\x98\x94\x3\x2\x2"+
		"\x2\x98\x96\x3\x2\x2\x2\x99\x32\x3\x2\x2\x2\x9A\x9B\a\x30\x2\x2\x9B\x9C"+
		"\aN\x2\x2\x9C\x9D\ag\x2\x2\x9D\x9E\ap\x2\x2\x9E\x9F\ai\x2\x2\x9F\xA0\a"+
		"v\x2\x2\xA0\xA1\aj\x2\x2\xA1\xA2\a*\x2\x2\xA2\xA3\a+\x2\x2\xA3\x34\x3"+
		"\x2\x2\x2\xA4\xA6\a/\x2\x2\xA5\xA4\x3\x2\x2\x2\xA5\xA6\x3\x2\x2\x2\xA6"+
		"\xA8\x3\x2\x2\x2\xA7\xA9\t\x2\x2\x2\xA8\xA7\x3\x2\x2\x2\xA9\xAA\x3\x2"+
		"\x2\x2\xAA\xA8\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2\xAB\x36\x3\x2\x2\x2\xAC"+
		"\xAE\a/\x2\x2\xAD\xAC\x3\x2\x2\x2\xAD\xAE\x3\x2\x2\x2\xAE\xB0\x3\x2\x2"+
		"\x2\xAF\xB1\t\x2\x2\x2\xB0\xAF\x3\x2\x2\x2\xB1\xB2\x3\x2\x2\x2\xB2\xB0"+
		"\x3\x2\x2\x2\xB2\xB3\x3\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB6\a\x30\x2"+
		"\x2\xB5\xB7\t\x2\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xB6"+
		"\x3\x2\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\x38\x3\x2\x2\x2\xBA\xBE\a$\x2\x2"+
		"\xBB\xBD\n\x3\x2\x2\xBC\xBB\x3\x2\x2\x2\xBD\xC0\x3\x2\x2\x2\xBE\xBC\x3"+
		"\x2\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF\xC1\x3\x2\x2\x2\xC0\xBE\x3\x2\x2\x2"+
		"\xC1\xC2\a$\x2\x2\xC2:\x3\x2\x2\x2\xC3\xC7\a)\x2\x2\xC4\xC6\n\x4\x2\x2"+
		"\xC5\xC4\x3\x2\x2\x2\xC6\xC9\x3\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC7\xC8\x3"+
		"\x2\x2\x2\xC8\xCA\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xCA\xCB\a)\x2\x2\xCB"+
		"<\x3\x2\x2\x2\xCC\xCD\av\x2\x2\xCD\xCE\at\x2\x2\xCE\xCF\aw\x2\x2\xCF\xD6"+
		"\ag\x2\x2\xD0\xD1\ah\x2\x2\xD1\xD2\a\x63\x2\x2\xD2\xD3\an\x2\x2\xD3\xD4"+
		"\au\x2\x2\xD4\xD6\ag\x2\x2\xD5\xCC\x3\x2\x2\x2\xD5\xD0\x3\x2\x2\x2\xD6"+
		">\x3\x2\x2\x2\xD7\xD8\ap\x2\x2\xD8\xD9\aw\x2\x2\xD9\xDA\an\x2\x2\xDA\xDB"+
		"\an\x2\x2\xDB@\x3\x2\x2\x2\xDC\xDE\t\x5\x2\x2\xDD\xDC\x3\x2\x2\x2\xDD"+
		"\xDE\x3\x2\x2\x2\xDE\xE0\x3\x2\x2\x2\xDF\xE1\t\x2\x2\x2\xE0\xDF\x3\x2"+
		"\x2\x2\xE0\xE1\x3\x2\x2\x2\xE1\xE2\x3\x2\x2\x2\xE2\xEB\t\x2\x2\x2\xE3"+
		"\xE4\a\x34\x2\x2\xE4\xE5\t\x6\x2\x2\xE5\xEB\t\x2\x2\x2\xE6\xE7\a\x34\x2"+
		"\x2\xE7\xE8\a\x37\x2\x2\xE8\xE9\x3\x2\x2\x2\xE9\xEB\t\a\x2\x2\xEA\xDD"+
		"\x3\x2\x2\x2\xEA\xE3\x3\x2\x2\x2\xEA\xE6\x3\x2\x2\x2\xEB\x42\x3\x2\x2"+
		"\x2\xEC\xED\ah\x2\x2\xED\xEE\aq\x2\x2\xEE\xEF\at\x2\x2\xEF\x44\x3\x2\x2"+
		"\x2\xF0\xF1\ak\x2\x2\xF1\xF2\ap\x2\x2\xF2\x46\x3\x2\x2\x2\xF3\xF4\ah\x2"+
		"\x2\xF4\xF5\aq\x2\x2\xF5\xF6\at\x2\x2\xF6\xF7\ag\x2\x2\xF7\xF8\a\x63\x2"+
		"\x2\xF8\xF9\a\x65\x2\x2\xF9\xFA\aj\x2\x2\xFAH\x3\x2\x2\x2\xFB\xFC\a\x66"+
		"\x2\x2\xFC\xFD\aq\x2\x2\xFDJ\x3\x2\x2\x2\xFE\xFF\ay\x2\x2\xFF\x100\aj"+
		"\x2\x2\x100\x101\ak\x2\x2\x101\x102\an\x2\x2\x102\x109\ag\x2\x2\x103\x104"+
		"\aw\x2\x2\x104\x105\ap\x2\x2\x105\x106\av\x2\x2\x106\x107\ak\x2\x2\x107"+
		"\x109\an\x2\x2\x108\xFE\x3\x2\x2\x2\x108\x103\x3\x2\x2\x2\x109L\x3\x2"+
		"\x2\x2\x10A\x10B\ak\x2\x2\x10B\x10C\ah\x2\x2\x10CN\x3\x2\x2\x2\x10D\x10E"+
		"\ag\x2\x2\x10E\x10F\an\x2\x2\x10F\x110\au\x2\x2\x110\x111\ag\x2\x2\x111"+
		"P\x3\x2\x2\x2\x112\x113\a@\x2\x2\x113\x114\a,\x2\x2\x114\x118\x3\x2\x2"+
		"\x2\x115\x117\v\x2\x2\x2\x116\x115\x3\x2\x2\x2\x117\x11A\x3\x2\x2\x2\x118"+
		"\x119\x3\x2\x2\x2\x118\x116\x3\x2\x2\x2\x119\x11B\x3\x2\x2\x2\x11A\x118"+
		"\x3\x2\x2\x2\x11B\x11C\a,\x2\x2\x11C\x11D\a>\x2\x2\x11D\x11E\x3\x2\x2"+
		"\x2\x11E\x11F\b)\x2\x2\x11FR\x3\x2\x2\x2\x120\x121\a@\x2\x2\x121\x122"+
		"\a@\x2\x2\x122\x126\x3\x2\x2\x2\x123\x125\n\b\x2\x2\x124\x123\x3\x2\x2"+
		"\x2\x125\x128\x3\x2\x2\x2\x126\x124\x3\x2\x2\x2\x126\x127\x3\x2\x2\x2"+
		"\x127\x129\x3\x2\x2\x2\x128\x126\x3\x2\x2\x2\x129\x12A\b*\x2\x2\x12AT"+
		"\x3\x2\x2\x2\x12B\x12C\a\f\x2\x2\x12CV\x3\x2\x2\x2\x12D\x12F\t\t\x2\x2"+
		"\x12E\x12D\x3\x2\x2\x2\x12F\x130\x3\x2\x2\x2\x130\x12E\x3\x2\x2\x2\x130"+
		"\x131\x3\x2\x2\x2\x131\x132\x3\x2\x2\x2\x132\x133\b,\x2\x2\x133X\x3\x2"+
		"\x2\x2\x134\x138\t\n\x2\x2\x135\x137\t\v\x2\x2\x136\x135\x3\x2\x2\x2\x137"+
		"\x13A\x3\x2\x2\x2\x138\x136\x3\x2\x2\x2\x138\x139\x3\x2\x2\x2\x139Z\x3"+
		"\x2\x2\x2\x13A\x138\x3\x2\x2\x2\x14\x2\x98\xA5\xAA\xAD\xB2\xB8\xBE\xC7"+
		"\xD5\xDD\xE0\xEA\x108\x118\x126\x130\x138\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tetl.Content
