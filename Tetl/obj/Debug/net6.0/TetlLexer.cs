//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\rpgix\RiderProjects\Tetl\Tetl\Content\Tetl.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tetl.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TetlLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, BOOL_OPERATOR=24, 
		LENGTH=25, INTEGER=26, FLOAT=27, STRING=28, BOOL=29, NULL=30, FOR=31, 
		IN=32, FOREACH=33, DO=34, WHILE=35, IF=36, ELSE=37, COMMENT=38, LINE_COMMENT=39, 
		LINE_BREAK=40, WS=41, IDENTIFIER=42;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "BOOL_OPERATOR", 
		"LENGTH", "INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "FOR", "IN", "FOREACH", 
		"DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", "LINE_BREAK", 
		"WS", "IDENTIFIER"
	};


	public TetlLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'('", "')'", "'{'", "'}'", "'='", "','", "'['", "']'", "'.At'", 
		"'.'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'>'", 
		"'<'", "'>='", "'<='", null, "'.Length()'", null, null, null, null, "'null'", 
		"'for'", "'in'", "'foreach'", "'do'", null, "'if'", "'else'", null, null, 
		"'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"BOOL_OPERATOR", "LENGTH", "INTEGER", "FLOAT", "STRING", "BOOL", "NULL", 
		"FOR", "IN", "FOREACH", "DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", 
		"LINE_BREAK", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tetl.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2,\x121\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3"+
		"\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3"+
		"\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3"+
		"\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3"+
		"\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x5\x19\x95\n\x19\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x6\x1B"+
		"\xA2\n\x1B\r\x1B\xE\x1B\xA3\x3\x1C\x6\x1C\xA7\n\x1C\r\x1C\xE\x1C\xA8\x3"+
		"\x1C\x3\x1C\x6\x1C\xAD\n\x1C\r\x1C\xE\x1C\xAE\x3\x1D\x3\x1D\a\x1D\xB3"+
		"\n\x1D\f\x1D\xE\x1D\xB6\v\x1D\x3\x1D\x3\x1D\x3\x1D\a\x1D\xBB\n\x1D\f\x1D"+
		"\xE\x1D\xBE\v\x1D\x3\x1D\x5\x1D\xC1\n\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x5\x1E\xCC\n\x1E\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3"+
		"\"\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$"+
		"\x5$\xEF\n$\x3%\x3%\x3%\x3&\x3&\x3&\x3&\x3&\x3\'\x3\'\x3\'\x3\'\a\'\xFD"+
		"\n\'\f\'\xE\'\x100\v\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3(\x3(\x3(\x3(\a(\x10B"+
		"\n(\f(\xE(\x10E\v(\x3(\x3(\x3)\x3)\x3*\x6*\x115\n*\r*\xE*\x116\x3*\x3"+
		"*\x3+\x3+\a+\x11D\n+\f+\xE+\x120\v+\x3\xFE\x2\x2,\x3\x2\x3\x5\x2\x4\a"+
		"\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2"+
		"\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'"+
		"\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C"+
		"\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2"+
		"%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,\x3\x2\t\x3\x2\x32;\x3\x2$$\x3\x2"+
		"))\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2"+
		"\x32;\x43\\\x61\x61\x63|\x12F\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a"+
		"\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x3W\x3\x2"+
		"\x2\x2\x5Y\x3\x2\x2\x2\a[\x3\x2\x2\x2\t]\x3\x2\x2\x2\v_\x3\x2\x2\x2\r"+
		"\x61\x3\x2\x2\x2\xF\x63\x3\x2\x2\x2\x11\x65\x3\x2\x2\x2\x13g\x3\x2\x2"+
		"\x2\x15i\x3\x2\x2\x2\x17m\x3\x2\x2\x2\x19o\x3\x2\x2\x2\x1Bq\x3\x2\x2\x2"+
		"\x1Ds\x3\x2\x2\x2\x1Fu\x3\x2\x2\x2!w\x3\x2\x2\x2#y\x3\x2\x2\x2%{\x3\x2"+
		"\x2\x2\'~\x3\x2\x2\x2)\x81\x3\x2\x2\x2+\x83\x3\x2\x2\x2-\x85\x3\x2\x2"+
		"\x2/\x88\x3\x2\x2\x2\x31\x94\x3\x2\x2\x2\x33\x96\x3\x2\x2\x2\x35\xA1\x3"+
		"\x2\x2\x2\x37\xA6\x3\x2\x2\x2\x39\xC0\x3\x2\x2\x2;\xCB\x3\x2\x2\x2=\xCD"+
		"\x3\x2\x2\x2?\xD2\x3\x2\x2\x2\x41\xD6\x3\x2\x2\x2\x43\xD9\x3\x2\x2\x2"+
		"\x45\xE1\x3\x2\x2\x2G\xEE\x3\x2\x2\x2I\xF0\x3\x2\x2\x2K\xF3\x3\x2\x2\x2"+
		"M\xF8\x3\x2\x2\x2O\x106\x3\x2\x2\x2Q\x111\x3\x2\x2\x2S\x114\x3\x2\x2\x2"+
		"U\x11A\x3\x2\x2\x2WX\a=\x2\x2X\x4\x3\x2\x2\x2YZ\a*\x2\x2Z\x6\x3\x2\x2"+
		"\x2[\\\a+\x2\x2\\\b\x3\x2\x2\x2]^\a}\x2\x2^\n\x3\x2\x2\x2_`\a\x7F\x2\x2"+
		"`\f\x3\x2\x2\x2\x61\x62\a?\x2\x2\x62\xE\x3\x2\x2\x2\x63\x64\a.\x2\x2\x64"+
		"\x10\x3\x2\x2\x2\x65\x66\a]\x2\x2\x66\x12\x3\x2\x2\x2gh\a_\x2\x2h\x14"+
		"\x3\x2\x2\x2ij\a\x30\x2\x2jk\a\x43\x2\x2kl\av\x2\x2l\x16\x3\x2\x2\x2m"+
		"n\a\x30\x2\x2n\x18\x3\x2\x2\x2op\a#\x2\x2p\x1A\x3\x2\x2\x2qr\a,\x2\x2"+
		"r\x1C\x3\x2\x2\x2st\a\x31\x2\x2t\x1E\x3\x2\x2\x2uv\a\'\x2\x2v \x3\x2\x2"+
		"\x2wx\a-\x2\x2x\"\x3\x2\x2\x2yz\a/\x2\x2z$\x3\x2\x2\x2{|\a?\x2\x2|}\a"+
		"?\x2\x2}&\x3\x2\x2\x2~\x7F\a#\x2\x2\x7F\x80\a?\x2\x2\x80(\x3\x2\x2\x2"+
		"\x81\x82\a@\x2\x2\x82*\x3\x2\x2\x2\x83\x84\a>\x2\x2\x84,\x3\x2\x2\x2\x85"+
		"\x86\a@\x2\x2\x86\x87\a?\x2\x2\x87.\x3\x2\x2\x2\x88\x89\a>\x2\x2\x89\x8A"+
		"\a?\x2\x2\x8A\x30\x3\x2\x2\x2\x8B\x8C\a(\x2\x2\x8C\x95\a(\x2\x2\x8D\x8E"+
		"\a\x63\x2\x2\x8E\x8F\ap\x2\x2\x8F\x95\a\x66\x2\x2\x90\x91\a~\x2\x2\x91"+
		"\x95\a~\x2\x2\x92\x93\aq\x2\x2\x93\x95\at\x2\x2\x94\x8B\x3\x2\x2\x2\x94"+
		"\x8D\x3\x2\x2\x2\x94\x90\x3\x2\x2\x2\x94\x92\x3\x2\x2\x2\x95\x32\x3\x2"+
		"\x2\x2\x96\x97\a\x30\x2\x2\x97\x98\aN\x2\x2\x98\x99\ag\x2\x2\x99\x9A\a"+
		"p\x2\x2\x9A\x9B\ai\x2\x2\x9B\x9C\av\x2\x2\x9C\x9D\aj\x2\x2\x9D\x9E\a*"+
		"\x2\x2\x9E\x9F\a+\x2\x2\x9F\x34\x3\x2\x2\x2\xA0\xA2\t\x2\x2\x2\xA1\xA0"+
		"\x3\x2\x2\x2\xA2\xA3\x3\x2\x2\x2\xA3\xA1\x3\x2\x2\x2\xA3\xA4\x3\x2\x2"+
		"\x2\xA4\x36\x3\x2\x2\x2\xA5\xA7\t\x2\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7\xA8"+
		"\x3\x2\x2\x2\xA8\xA6\x3\x2\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\xAA\x3\x2\x2"+
		"\x2\xAA\xAC\a\x30\x2\x2\xAB\xAD\t\x2\x2\x2\xAC\xAB\x3\x2\x2\x2\xAD\xAE"+
		"\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\x38\x3\x2\x2"+
		"\x2\xB0\xB4\a$\x2\x2\xB1\xB3\n\x3\x2\x2\xB2\xB1\x3\x2\x2\x2\xB3\xB6\x3"+
		"\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5\xB7\x3\x2\x2\x2"+
		"\xB6\xB4\x3\x2\x2\x2\xB7\xC1\a$\x2\x2\xB8\xBC\a)\x2\x2\xB9\xBB\n\x4\x2"+
		"\x2\xBA\xB9\x3\x2\x2\x2\xBB\xBE\x3\x2\x2\x2\xBC\xBA\x3\x2\x2\x2\xBC\xBD"+
		"\x3\x2\x2\x2\xBD\xBF\x3\x2\x2\x2\xBE\xBC\x3\x2\x2\x2\xBF\xC1\a)\x2\x2"+
		"\xC0\xB0\x3\x2\x2\x2\xC0\xB8\x3\x2\x2\x2\xC1:\x3\x2\x2\x2\xC2\xC3\av\x2"+
		"\x2\xC3\xC4\at\x2\x2\xC4\xC5\aw\x2\x2\xC5\xCC\ag\x2\x2\xC6\xC7\ah\x2\x2"+
		"\xC7\xC8\a\x63\x2\x2\xC8\xC9\an\x2\x2\xC9\xCA\au\x2\x2\xCA\xCC\ag\x2\x2"+
		"\xCB\xC2\x3\x2\x2\x2\xCB\xC6\x3\x2\x2\x2\xCC<\x3\x2\x2\x2\xCD\xCE\ap\x2"+
		"\x2\xCE\xCF\aw\x2\x2\xCF\xD0\an\x2\x2\xD0\xD1\an\x2\x2\xD1>\x3\x2\x2\x2"+
		"\xD2\xD3\ah\x2\x2\xD3\xD4\aq\x2\x2\xD4\xD5\at\x2\x2\xD5@\x3\x2\x2\x2\xD6"+
		"\xD7\ak\x2\x2\xD7\xD8\ap\x2\x2\xD8\x42\x3\x2\x2\x2\xD9\xDA\ah\x2\x2\xDA"+
		"\xDB\aq\x2\x2\xDB\xDC\at\x2\x2\xDC\xDD\ag\x2\x2\xDD\xDE\a\x63\x2\x2\xDE"+
		"\xDF\a\x65\x2\x2\xDF\xE0\aj\x2\x2\xE0\x44\x3\x2\x2\x2\xE1\xE2\a\x66\x2"+
		"\x2\xE2\xE3\aq\x2\x2\xE3\x46\x3\x2\x2\x2\xE4\xE5\ay\x2\x2\xE5\xE6\aj\x2"+
		"\x2\xE6\xE7\ak\x2\x2\xE7\xE8\an\x2\x2\xE8\xEF\ag\x2\x2\xE9\xEA\aw\x2\x2"+
		"\xEA\xEB\ap\x2\x2\xEB\xEC\av\x2\x2\xEC\xED\ak\x2\x2\xED\xEF\an\x2\x2\xEE"+
		"\xE4\x3\x2\x2\x2\xEE\xE9\x3\x2\x2\x2\xEFH\x3\x2\x2\x2\xF0\xF1\ak\x2\x2"+
		"\xF1\xF2\ah\x2\x2\xF2J\x3\x2\x2\x2\xF3\xF4\ag\x2\x2\xF4\xF5\an\x2\x2\xF5"+
		"\xF6\au\x2\x2\xF6\xF7\ag\x2\x2\xF7L\x3\x2\x2\x2\xF8\xF9\a@\x2\x2\xF9\xFA"+
		"\a,\x2\x2\xFA\xFE\x3\x2\x2\x2\xFB\xFD\v\x2\x2\x2\xFC\xFB\x3\x2\x2\x2\xFD"+
		"\x100\x3\x2\x2\x2\xFE\xFF\x3\x2\x2\x2\xFE\xFC\x3\x2\x2\x2\xFF\x101\x3"+
		"\x2\x2\x2\x100\xFE\x3\x2\x2\x2\x101\x102\a,\x2\x2\x102\x103\a>\x2\x2\x103"+
		"\x104\x3\x2\x2\x2\x104\x105\b\'\x2\x2\x105N\x3\x2\x2\x2\x106\x107\a@\x2"+
		"\x2\x107\x108\a@\x2\x2\x108\x10C\x3\x2\x2\x2\x109\x10B\n\x5\x2\x2\x10A"+
		"\x109\x3\x2\x2\x2\x10B\x10E\x3\x2\x2\x2\x10C\x10A\x3\x2\x2\x2\x10C\x10D"+
		"\x3\x2\x2\x2\x10D\x10F\x3\x2\x2\x2\x10E\x10C\x3\x2\x2\x2\x10F\x110\b("+
		"\x2\x2\x110P\x3\x2\x2\x2\x111\x112\a\f\x2\x2\x112R\x3\x2\x2\x2\x113\x115"+
		"\t\x6\x2\x2\x114\x113\x3\x2\x2\x2\x115\x116\x3\x2\x2\x2\x116\x114\x3\x2"+
		"\x2\x2\x116\x117\x3\x2\x2\x2\x117\x118\x3\x2\x2\x2\x118\x119\b*\x2\x2"+
		"\x119T\x3\x2\x2\x2\x11A\x11E\t\a\x2\x2\x11B\x11D\t\b\x2\x2\x11C\x11B\x3"+
		"\x2\x2\x2\x11D\x120\x3\x2\x2\x2\x11E\x11C\x3\x2\x2\x2\x11E\x11F\x3\x2"+
		"\x2\x2\x11FV\x3\x2\x2\x2\x120\x11E\x3\x2\x2\x2\x10\x2\x94\xA3\xA8\xAE"+
		"\xB4\xBC\xC0\xCB\xEE\xFE\x10C\x116\x11E\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tetl.Content
