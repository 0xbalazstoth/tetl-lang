//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\rpgix\RiderProjects\Tetl\Tetl\Content\Tetl.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tetl.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TetlLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, BOOL_OPERATOR=24, 
		INTEGER=25, FLOAT=26, STRING=27, BOOL=28, NULL=29, FOR=30, IN=31, FOREACH=32, 
		DO=33, WHILE=34, IF=35, ELSE=36, COMMENT=37, LINE_COMMENT=38, LINE_BREAK=39, 
		WS=40, IDENTIFIER=41;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "BOOL_OPERATOR", 
		"INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "FOR", "IN", "FOREACH", 
		"DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", "LINE_BREAK", 
		"WS", "IDENTIFIER"
	};


	public TetlLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'('", "')'", "'{'", "'}'", "'='", "','", "'['", "']'", "'.At'", 
		"'.Length()'", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", 
		"'>'", "'<'", "'>='", "'<='", null, null, null, null, null, "'null'", 
		"'for'", "'in'", "'foreach'", "'do'", null, "'if'", "'else'", null, null, 
		"'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"BOOL_OPERATOR", "INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "FOR", 
		"IN", "FOREACH", "DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", 
		"LINE_BREAK", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tetl.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2+\x11D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3"+
		"\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3"+
		"\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3"+
		"\x19\x5\x19\x9B\n\x19\x3\x1A\x6\x1A\x9E\n\x1A\r\x1A\xE\x1A\x9F\x3\x1B"+
		"\x6\x1B\xA3\n\x1B\r\x1B\xE\x1B\xA4\x3\x1B\x3\x1B\x6\x1B\xA9\n\x1B\r\x1B"+
		"\xE\x1B\xAA\x3\x1C\x3\x1C\a\x1C\xAF\n\x1C\f\x1C\xE\x1C\xB2\v\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\a\x1C\xB7\n\x1C\f\x1C\xE\x1C\xBA\v\x1C\x3\x1C\x5\x1C\xBD"+
		"\n\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x5\x1D\xC8\n\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3\"\x3\"\x3\""+
		"\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x5#\xEB\n#\x3$\x3$\x3$\x3%\x3"+
		"%\x3%\x3%\x3%\x3&\x3&\x3&\x3&\a&\xF9\n&\f&\xE&\xFC\v&\x3&\x3&\x3&\x3&"+
		"\x3&\x3\'\x3\'\x3\'\x3\'\a\'\x107\n\'\f\'\xE\'\x10A\v\'\x3\'\x3\'\x3("+
		"\x3(\x3)\x6)\x111\n)\r)\xE)\x112\x3)\x3)\x3*\x3*\a*\x119\n*\f*\xE*\x11C"+
		"\v*\x3\xFA\x2\x2+\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+\x3\x2\t\x3\x2\x32;\x3\x2$$\x3\x2))\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\""+
		"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x12B\x2\x3\x3"+
		"\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3"+
		"\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13"+
		"\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2"+
		"\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2"+
		"\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2"+
		"+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2"+
		"\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2"+
		"K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2"+
		"\x2\x2\x3U\x3\x2\x2\x2\x5W\x3\x2\x2\x2\aY\x3\x2\x2\x2\t[\x3\x2\x2\x2\v"+
		"]\x3\x2\x2\x2\r_\x3\x2\x2\x2\xF\x61\x3\x2\x2\x2\x11\x63\x3\x2\x2\x2\x13"+
		"\x65\x3\x2\x2\x2\x15g\x3\x2\x2\x2\x17k\x3\x2\x2\x2\x19u\x3\x2\x2\x2\x1B"+
		"w\x3\x2\x2\x2\x1Dy\x3\x2\x2\x2\x1F{\x3\x2\x2\x2!}\x3\x2\x2\x2#\x7F\x3"+
		"\x2\x2\x2%\x81\x3\x2\x2\x2\'\x84\x3\x2\x2\x2)\x87\x3\x2\x2\x2+\x89\x3"+
		"\x2\x2\x2-\x8B\x3\x2\x2\x2/\x8E\x3\x2\x2\x2\x31\x9A\x3\x2\x2\x2\x33\x9D"+
		"\x3\x2\x2\x2\x35\xA2\x3\x2\x2\x2\x37\xBC\x3\x2\x2\x2\x39\xC7\x3\x2\x2"+
		"\x2;\xC9\x3\x2\x2\x2=\xCE\x3\x2\x2\x2?\xD2\x3\x2\x2\x2\x41\xD5\x3\x2\x2"+
		"\x2\x43\xDD\x3\x2\x2\x2\x45\xEA\x3\x2\x2\x2G\xEC\x3\x2\x2\x2I\xEF\x3\x2"+
		"\x2\x2K\xF4\x3\x2\x2\x2M\x102\x3\x2\x2\x2O\x10D\x3\x2\x2\x2Q\x110\x3\x2"+
		"\x2\x2S\x116\x3\x2\x2\x2UV\a=\x2\x2V\x4\x3\x2\x2\x2WX\a*\x2\x2X\x6\x3"+
		"\x2\x2\x2YZ\a+\x2\x2Z\b\x3\x2\x2\x2[\\\a}\x2\x2\\\n\x3\x2\x2\x2]^\a\x7F"+
		"\x2\x2^\f\x3\x2\x2\x2_`\a?\x2\x2`\xE\x3\x2\x2\x2\x61\x62\a.\x2\x2\x62"+
		"\x10\x3\x2\x2\x2\x63\x64\a]\x2\x2\x64\x12\x3\x2\x2\x2\x65\x66\a_\x2\x2"+
		"\x66\x14\x3\x2\x2\x2gh\a\x30\x2\x2hi\a\x43\x2\x2ij\av\x2\x2j\x16\x3\x2"+
		"\x2\x2kl\a\x30\x2\x2lm\aN\x2\x2mn\ag\x2\x2no\ap\x2\x2op\ai\x2\x2pq\av"+
		"\x2\x2qr\aj\x2\x2rs\a*\x2\x2st\a+\x2\x2t\x18\x3\x2\x2\x2uv\a#\x2\x2v\x1A"+
		"\x3\x2\x2\x2wx\a,\x2\x2x\x1C\x3\x2\x2\x2yz\a\x31\x2\x2z\x1E\x3\x2\x2\x2"+
		"{|\a\'\x2\x2| \x3\x2\x2\x2}~\a-\x2\x2~\"\x3\x2\x2\x2\x7F\x80\a/\x2\x2"+
		"\x80$\x3\x2\x2\x2\x81\x82\a?\x2\x2\x82\x83\a?\x2\x2\x83&\x3\x2\x2\x2\x84"+
		"\x85\a#\x2\x2\x85\x86\a?\x2\x2\x86(\x3\x2\x2\x2\x87\x88\a@\x2\x2\x88*"+
		"\x3\x2\x2\x2\x89\x8A\a>\x2\x2\x8A,\x3\x2\x2\x2\x8B\x8C\a@\x2\x2\x8C\x8D"+
		"\a?\x2\x2\x8D.\x3\x2\x2\x2\x8E\x8F\a>\x2\x2\x8F\x90\a?\x2\x2\x90\x30\x3"+
		"\x2\x2\x2\x91\x92\a(\x2\x2\x92\x9B\a(\x2\x2\x93\x94\a\x63\x2\x2\x94\x95"+
		"\ap\x2\x2\x95\x9B\a\x66\x2\x2\x96\x97\a~\x2\x2\x97\x9B\a~\x2\x2\x98\x99"+
		"\aq\x2\x2\x99\x9B\at\x2\x2\x9A\x91\x3\x2\x2\x2\x9A\x93\x3\x2\x2\x2\x9A"+
		"\x96\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9B\x32\x3\x2\x2\x2\x9C\x9E\t\x2"+
		"\x2\x2\x9D\x9C\x3\x2\x2\x2\x9E\x9F\x3\x2\x2\x2\x9F\x9D\x3\x2\x2\x2\x9F"+
		"\xA0\x3\x2\x2\x2\xA0\x34\x3\x2\x2\x2\xA1\xA3\t\x2\x2\x2\xA2\xA1\x3\x2"+
		"\x2\x2\xA3\xA4\x3\x2\x2\x2\xA4\xA2\x3\x2\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5"+
		"\xA6\x3\x2\x2\x2\xA6\xA8\a\x30\x2\x2\xA7\xA9\t\x2\x2\x2\xA8\xA7\x3\x2"+
		"\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA\xA8\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2\xAB"+
		"\x36\x3\x2\x2\x2\xAC\xB0\a$\x2\x2\xAD\xAF\n\x3\x2\x2\xAE\xAD\x3\x2\x2"+
		"\x2\xAF\xB2\x3\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB0\xB1\x3\x2\x2\x2\xB1\xB3"+
		"\x3\x2\x2\x2\xB2\xB0\x3\x2\x2\x2\xB3\xBD\a$\x2\x2\xB4\xB8\a)\x2\x2\xB5"+
		"\xB7\n\x4\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7\xBA\x3\x2\x2\x2\xB8\xB6\x3\x2"+
		"\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\xBB\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBB"+
		"\xBD\a)\x2\x2\xBC\xAC\x3\x2\x2\x2\xBC\xB4\x3\x2\x2\x2\xBD\x38\x3\x2\x2"+
		"\x2\xBE\xBF\av\x2\x2\xBF\xC0\at\x2\x2\xC0\xC1\aw\x2\x2\xC1\xC8\ag\x2\x2"+
		"\xC2\xC3\ah\x2\x2\xC3\xC4\a\x63\x2\x2\xC4\xC5\an\x2\x2\xC5\xC6\au\x2\x2"+
		"\xC6\xC8\ag\x2\x2\xC7\xBE\x3\x2\x2\x2\xC7\xC2\x3\x2\x2\x2\xC8:\x3\x2\x2"+
		"\x2\xC9\xCA\ap\x2\x2\xCA\xCB\aw\x2\x2\xCB\xCC\an\x2\x2\xCC\xCD\an\x2\x2"+
		"\xCD<\x3\x2\x2\x2\xCE\xCF\ah\x2\x2\xCF\xD0\aq\x2\x2\xD0\xD1\at\x2\x2\xD1"+
		">\x3\x2\x2\x2\xD2\xD3\ak\x2\x2\xD3\xD4\ap\x2\x2\xD4@\x3\x2\x2\x2\xD5\xD6"+
		"\ah\x2\x2\xD6\xD7\aq\x2\x2\xD7\xD8\at\x2\x2\xD8\xD9\ag\x2\x2\xD9\xDA\a"+
		"\x63\x2\x2\xDA\xDB\a\x65\x2\x2\xDB\xDC\aj\x2\x2\xDC\x42\x3\x2\x2\x2\xDD"+
		"\xDE\a\x66\x2\x2\xDE\xDF\aq\x2\x2\xDF\x44\x3\x2\x2\x2\xE0\xE1\ay\x2\x2"+
		"\xE1\xE2\aj\x2\x2\xE2\xE3\ak\x2\x2\xE3\xE4\an\x2\x2\xE4\xEB\ag\x2\x2\xE5"+
		"\xE6\aw\x2\x2\xE6\xE7\ap\x2\x2\xE7\xE8\av\x2\x2\xE8\xE9\ak\x2\x2\xE9\xEB"+
		"\an\x2\x2\xEA\xE0\x3\x2\x2\x2\xEA\xE5\x3\x2\x2\x2\xEB\x46\x3\x2\x2\x2"+
		"\xEC\xED\ak\x2\x2\xED\xEE\ah\x2\x2\xEEH\x3\x2\x2\x2\xEF\xF0\ag\x2\x2\xF0"+
		"\xF1\an\x2\x2\xF1\xF2\au\x2\x2\xF2\xF3\ag\x2\x2\xF3J\x3\x2\x2\x2\xF4\xF5"+
		"\a@\x2\x2\xF5\xF6\a,\x2\x2\xF6\xFA\x3\x2\x2\x2\xF7\xF9\v\x2\x2\x2\xF8"+
		"\xF7\x3\x2\x2\x2\xF9\xFC\x3\x2\x2\x2\xFA\xFB\x3\x2\x2\x2\xFA\xF8\x3\x2"+
		"\x2\x2\xFB\xFD\x3\x2\x2\x2\xFC\xFA\x3\x2\x2\x2\xFD\xFE\a,\x2\x2\xFE\xFF"+
		"\a>\x2\x2\xFF\x100\x3\x2\x2\x2\x100\x101\b&\x2\x2\x101L\x3\x2\x2\x2\x102"+
		"\x103\a@\x2\x2\x103\x104\a@\x2\x2\x104\x108\x3\x2\x2\x2\x105\x107\n\x5"+
		"\x2\x2\x106\x105\x3\x2\x2\x2\x107\x10A\x3\x2\x2\x2\x108\x106\x3\x2\x2"+
		"\x2\x108\x109\x3\x2\x2\x2\x109\x10B\x3\x2\x2\x2\x10A\x108\x3\x2\x2\x2"+
		"\x10B\x10C\b\'\x2\x2\x10CN\x3\x2\x2\x2\x10D\x10E\a\f\x2\x2\x10EP\x3\x2"+
		"\x2\x2\x10F\x111\t\x6\x2\x2\x110\x10F\x3\x2\x2\x2\x111\x112\x3\x2\x2\x2"+
		"\x112\x110\x3\x2\x2\x2\x112\x113\x3\x2\x2\x2\x113\x114\x3\x2\x2\x2\x114"+
		"\x115\b)\x2\x2\x115R\x3\x2\x2\x2\x116\x11A\t\a\x2\x2\x117\x119\t\b\x2"+
		"\x2\x118\x117\x3\x2\x2\x2\x119\x11C\x3\x2\x2\x2\x11A\x118\x3\x2\x2\x2"+
		"\x11A\x11B\x3\x2\x2\x2\x11BT\x3\x2\x2\x2\x11C\x11A\x3\x2\x2\x2\x10\x2"+
		"\x9A\x9F\xA4\xAA\xB0\xB8\xBC\xC7\xEA\xFA\x108\x112\x11A\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tetl.Content
