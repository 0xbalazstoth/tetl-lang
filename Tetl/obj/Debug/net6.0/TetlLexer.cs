//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\rpgix\RiderProjects\Tetl\Tetl\Content\Tetl.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tetl.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TetlLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, BOOL_OPERATOR=22, INTEGER=23, 
		FLOAT=24, STRING=25, BOOL=26, NULL=27, FOR=28, IN=29, FOREACH=30, DO=31, 
		WHILE=32, IF=33, ELSE=34, COMMENT=35, LINE_COMMENT=36, LINE_BREAK=37, 
		WS=38, IDENTIFIER=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "BOOL_OPERATOR", "INTEGER", "FLOAT", 
		"STRING", "BOOL", "NULL", "FOR", "IN", "FOREACH", "DO", "WHILE", "IF", 
		"ELSE", "COMMENT", "LINE_COMMENT", "LINE_BREAK", "WS", "IDENTIFIER"
	};


	public TetlLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'('", "')'", "'{'", "'}'", "'='", "','", "'['", "']'", "'!'", 
		"'*'", "'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'>'", "'<'", "'>='", 
		"'<='", null, null, null, null, null, "'null'", "'for'", "'in'", "'foreach'", 
		"'do'", null, "'if'", "'else'", null, null, "'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "BOOL_OPERATOR", 
		"INTEGER", "FLOAT", "STRING", "BOOL", "NULL", "FOR", "IN", "FOREACH", 
		"DO", "WHILE", "IF", "ELSE", "COMMENT", "LINE_COMMENT", "LINE_BREAK", 
		"WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tetl.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x10B\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x3\x2\x3\x2\x3"+
		"\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t"+
		"\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x5\x17\x89\n\x17\x3"+
		"\x18\x6\x18\x8C\n\x18\r\x18\xE\x18\x8D\x3\x19\x6\x19\x91\n\x19\r\x19\xE"+
		"\x19\x92\x3\x19\x3\x19\x6\x19\x97\n\x19\r\x19\xE\x19\x98\x3\x1A\x3\x1A"+
		"\a\x1A\x9D\n\x1A\f\x1A\xE\x1A\xA0\v\x1A\x3\x1A\x3\x1A\x3\x1A\a\x1A\xA5"+
		"\n\x1A\f\x1A\xE\x1A\xA8\v\x1A\x3\x1A\x5\x1A\xAB\n\x1A\x3\x1B\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x5\x1B\xB6\n\x1B\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3"+
		" \x3 \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x5!\xD9\n!\x3\"\x3\"\x3"+
		"\"\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\a$\xE7\n$\f$\xE$\xEA\v$\x3$\x3"+
		"$\x3$\x3$\x3$\x3%\x3%\x3%\x3%\a%\xF5\n%\f%\xE%\xF8\v%\x3%\x3%\x3&\x3&"+
		"\x3\'\x6\'\xFF\n\'\r\'\xE\'\x100\x3\'\x3\'\x3(\x3(\a(\x107\n(\f(\xE(\x10A"+
		"\v(\x3\xE8\x2\x2)\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)\x3\x2\t"+
		"\x3\x2\x32;\x3\x2$$\x3\x2))\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x5\x2"+
		"\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x119\x2\x3\x3\x2\x2"+
		"\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2"+
		"\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2"+
		"\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B"+
		"\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2"+
		"#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3"+
		"\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3"+
		"\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2"+
		";\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43"+
		"\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3"+
		"\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x3Q\x3\x2\x2\x2\x5S\x3\x2\x2"+
		"\x2\aU\x3\x2\x2\x2\tW\x3\x2\x2\x2\vY\x3\x2\x2\x2\r[\x3\x2\x2\x2\xF]\x3"+
		"\x2\x2\x2\x11_\x3\x2\x2\x2\x13\x61\x3\x2\x2\x2\x15\x63\x3\x2\x2\x2\x17"+
		"\x65\x3\x2\x2\x2\x19g\x3\x2\x2\x2\x1Bi\x3\x2\x2\x2\x1Dk\x3\x2\x2\x2\x1F"+
		"m\x3\x2\x2\x2!o\x3\x2\x2\x2#r\x3\x2\x2\x2%u\x3\x2\x2\x2\'w\x3\x2\x2\x2"+
		")y\x3\x2\x2\x2+|\x3\x2\x2\x2-\x88\x3\x2\x2\x2/\x8B\x3\x2\x2\x2\x31\x90"+
		"\x3\x2\x2\x2\x33\xAA\x3\x2\x2\x2\x35\xB5\x3\x2\x2\x2\x37\xB7\x3\x2\x2"+
		"\x2\x39\xBC\x3\x2\x2\x2;\xC0\x3\x2\x2\x2=\xC3\x3\x2\x2\x2?\xCB\x3\x2\x2"+
		"\x2\x41\xD8\x3\x2\x2\x2\x43\xDA\x3\x2\x2\x2\x45\xDD\x3\x2\x2\x2G\xE2\x3"+
		"\x2\x2\x2I\xF0\x3\x2\x2\x2K\xFB\x3\x2\x2\x2M\xFE\x3\x2\x2\x2O\x104\x3"+
		"\x2\x2\x2QR\a=\x2\x2R\x4\x3\x2\x2\x2ST\a*\x2\x2T\x6\x3\x2\x2\x2UV\a+\x2"+
		"\x2V\b\x3\x2\x2\x2WX\a}\x2\x2X\n\x3\x2\x2\x2YZ\a\x7F\x2\x2Z\f\x3\x2\x2"+
		"\x2[\\\a?\x2\x2\\\xE\x3\x2\x2\x2]^\a.\x2\x2^\x10\x3\x2\x2\x2_`\a]\x2\x2"+
		"`\x12\x3\x2\x2\x2\x61\x62\a_\x2\x2\x62\x14\x3\x2\x2\x2\x63\x64\a#\x2\x2"+
		"\x64\x16\x3\x2\x2\x2\x65\x66\a,\x2\x2\x66\x18\x3\x2\x2\x2gh\a\x31\x2\x2"+
		"h\x1A\x3\x2\x2\x2ij\a\'\x2\x2j\x1C\x3\x2\x2\x2kl\a-\x2\x2l\x1E\x3\x2\x2"+
		"\x2mn\a/\x2\x2n \x3\x2\x2\x2op\a?\x2\x2pq\a?\x2\x2q\"\x3\x2\x2\x2rs\a"+
		"#\x2\x2st\a?\x2\x2t$\x3\x2\x2\x2uv\a@\x2\x2v&\x3\x2\x2\x2wx\a>\x2\x2x"+
		"(\x3\x2\x2\x2yz\a@\x2\x2z{\a?\x2\x2{*\x3\x2\x2\x2|}\a>\x2\x2}~\a?\x2\x2"+
		"~,\x3\x2\x2\x2\x7F\x80\a(\x2\x2\x80\x89\a(\x2\x2\x81\x82\a\x63\x2\x2\x82"+
		"\x83\ap\x2\x2\x83\x89\a\x66\x2\x2\x84\x85\a~\x2\x2\x85\x89\a~\x2\x2\x86"+
		"\x87\aq\x2\x2\x87\x89\at\x2\x2\x88\x7F\x3\x2\x2\x2\x88\x81\x3\x2\x2\x2"+
		"\x88\x84\x3\x2\x2\x2\x88\x86\x3\x2\x2\x2\x89.\x3\x2\x2\x2\x8A\x8C\t\x2"+
		"\x2\x2\x8B\x8A\x3\x2\x2\x2\x8C\x8D\x3\x2\x2\x2\x8D\x8B\x3\x2\x2\x2\x8D"+
		"\x8E\x3\x2\x2\x2\x8E\x30\x3\x2\x2\x2\x8F\x91\t\x2\x2\x2\x90\x8F\x3\x2"+
		"\x2\x2\x91\x92\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x93"+
		"\x94\x3\x2\x2\x2\x94\x96\a\x30\x2\x2\x95\x97\t\x2\x2\x2\x96\x95\x3\x2"+
		"\x2\x2\x97\x98\x3\x2\x2\x2\x98\x96\x3\x2\x2\x2\x98\x99\x3\x2\x2\x2\x99"+
		"\x32\x3\x2\x2\x2\x9A\x9E\a$\x2\x2\x9B\x9D\n\x3\x2\x2\x9C\x9B\x3\x2\x2"+
		"\x2\x9D\xA0\x3\x2\x2\x2\x9E\x9C\x3\x2\x2\x2\x9E\x9F\x3\x2\x2\x2\x9F\xA1"+
		"\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA1\xAB\a$\x2\x2\xA2\xA6\a)\x2\x2\xA3"+
		"\xA5\n\x4\x2\x2\xA4\xA3\x3\x2\x2\x2\xA5\xA8\x3\x2\x2\x2\xA6\xA4\x3\x2"+
		"\x2\x2\xA6\xA7\x3\x2\x2\x2\xA7\xA9\x3\x2\x2\x2\xA8\xA6\x3\x2\x2\x2\xA9"+
		"\xAB\a)\x2\x2\xAA\x9A\x3\x2\x2\x2\xAA\xA2\x3\x2\x2\x2\xAB\x34\x3\x2\x2"+
		"\x2\xAC\xAD\av\x2\x2\xAD\xAE\at\x2\x2\xAE\xAF\aw\x2\x2\xAF\xB6\ag\x2\x2"+
		"\xB0\xB1\ah\x2\x2\xB1\xB2\a\x63\x2\x2\xB2\xB3\an\x2\x2\xB3\xB4\au\x2\x2"+
		"\xB4\xB6\ag\x2\x2\xB5\xAC\x3\x2\x2\x2\xB5\xB0\x3\x2\x2\x2\xB6\x36\x3\x2"+
		"\x2\x2\xB7\xB8\ap\x2\x2\xB8\xB9\aw\x2\x2\xB9\xBA\an\x2\x2\xBA\xBB\an\x2"+
		"\x2\xBB\x38\x3\x2\x2\x2\xBC\xBD\ah\x2\x2\xBD\xBE\aq\x2\x2\xBE\xBF\at\x2"+
		"\x2\xBF:\x3\x2\x2\x2\xC0\xC1\ak\x2\x2\xC1\xC2\ap\x2\x2\xC2<\x3\x2\x2\x2"+
		"\xC3\xC4\ah\x2\x2\xC4\xC5\aq\x2\x2\xC5\xC6\at\x2\x2\xC6\xC7\ag\x2\x2\xC7"+
		"\xC8\a\x63\x2\x2\xC8\xC9\a\x65\x2\x2\xC9\xCA\aj\x2\x2\xCA>\x3\x2\x2\x2"+
		"\xCB\xCC\a\x66\x2\x2\xCC\xCD\aq\x2\x2\xCD@\x3\x2\x2\x2\xCE\xCF\ay\x2\x2"+
		"\xCF\xD0\aj\x2\x2\xD0\xD1\ak\x2\x2\xD1\xD2\an\x2\x2\xD2\xD9\ag\x2\x2\xD3"+
		"\xD4\aw\x2\x2\xD4\xD5\ap\x2\x2\xD5\xD6\av\x2\x2\xD6\xD7\ak\x2\x2\xD7\xD9"+
		"\an\x2\x2\xD8\xCE\x3\x2\x2\x2\xD8\xD3\x3\x2\x2\x2\xD9\x42\x3\x2\x2\x2"+
		"\xDA\xDB\ak\x2\x2\xDB\xDC\ah\x2\x2\xDC\x44\x3\x2\x2\x2\xDD\xDE\ag\x2\x2"+
		"\xDE\xDF\an\x2\x2\xDF\xE0\au\x2\x2\xE0\xE1\ag\x2\x2\xE1\x46\x3\x2\x2\x2"+
		"\xE2\xE3\a@\x2\x2\xE3\xE4\a,\x2\x2\xE4\xE8\x3\x2\x2\x2\xE5\xE7\v\x2\x2"+
		"\x2\xE6\xE5\x3\x2\x2\x2\xE7\xEA\x3\x2\x2\x2\xE8\xE9\x3\x2\x2\x2\xE8\xE6"+
		"\x3\x2\x2\x2\xE9\xEB\x3\x2\x2\x2\xEA\xE8\x3\x2\x2\x2\xEB\xEC\a,\x2\x2"+
		"\xEC\xED\a>\x2\x2\xED\xEE\x3\x2\x2\x2\xEE\xEF\b$\x2\x2\xEFH\x3\x2\x2\x2"+
		"\xF0\xF1\a@\x2\x2\xF1\xF2\a@\x2\x2\xF2\xF6\x3\x2\x2\x2\xF3\xF5\n\x5\x2"+
		"\x2\xF4\xF3\x3\x2\x2\x2\xF5\xF8\x3\x2\x2\x2\xF6\xF4\x3\x2\x2\x2\xF6\xF7"+
		"\x3\x2\x2\x2\xF7\xF9\x3\x2\x2\x2\xF8\xF6\x3\x2\x2\x2\xF9\xFA\b%\x2\x2"+
		"\xFAJ\x3\x2\x2\x2\xFB\xFC\a\f\x2\x2\xFCL\x3\x2\x2\x2\xFD\xFF\t\x6\x2\x2"+
		"\xFE\xFD\x3\x2\x2\x2\xFF\x100\x3\x2\x2\x2\x100\xFE\x3\x2\x2\x2\x100\x101"+
		"\x3\x2\x2\x2\x101\x102\x3\x2\x2\x2\x102\x103\b\'\x2\x2\x103N\x3\x2\x2"+
		"\x2\x104\x108\t\a\x2\x2\x105\x107\t\b\x2\x2\x106\x105\x3\x2\x2\x2\x107"+
		"\x10A\x3\x2\x2\x2\x108\x106\x3\x2\x2\x2\x108\x109\x3\x2\x2\x2\x109P\x3"+
		"\x2\x2\x2\x10A\x108\x3\x2\x2\x2\x10\x2\x88\x8D\x92\x98\x9E\xA6\xAA\xB5"+
		"\xD8\xE8\xF6\x100\x108\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tetl.Content
